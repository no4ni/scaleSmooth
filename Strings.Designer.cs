//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScaleSmooth {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScaleSmooth.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Accurate.
        /// </summary>
        internal static string Accurate {
            get {
                return ResourceManager.GetString("Accurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Better videocard required! (Recommended NVIDIA GeForce 410+).
        /// </summary>
        internal static string BetterVideocard {
            get {
                return ResourceManager.GetString("BetterVideocard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Grid structure, little bit noisy and contrasty (for accuracy, subsequent reverse correction is desirable) and too small details may lost
        ///
        ///Very fast - Very very slow, but you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string boldScale {
            get {
                return ResourceManager.GetString("boldScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close program and cancel processing
        ///If this doesn&apos;t work, wait or kill process scaleSmooth from TaskManager (Ctrl+Shift+Esc).
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close.
        /// </summary>
        internal static string CloseButton {
            get {
                return ResourceManager.GetString("CloseButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Color.
        /// </summary>
        internal static string Color {
            get {
                return ResourceManager.GetString("Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Perfect result, but too contrasty (for accuracy, subsequent reverse correction is required) and too small details are lost
        ///
        ///Very fast - Very very slow, but you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string contrastBoldScale {
            get {
                return ResourceManager.GetString("contrastBoldScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click middle mouse button to copy stopwatch value.
        /// </summary>
        internal static string CopyStopwatch {
            get {
                return ResourceManager.GetString("CopyStopwatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Example result of selected method.
        /// </summary>
        internal static string Demo {
            get {
                return ResourceManager.GetString("Demo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Example result of bilinear interpolation.
        /// </summary>
        internal static string DemoBilinear {
            get {
                return ResourceManager.GetString("DemoBilinear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ETA.
        /// </summary>
        internal static string ETA {
            get {
                return ResourceManager.GetString("ETA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fast.
        /// </summary>
        internal static string Fast {
            get {
                return ResourceManager.GetString("Fast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select Fast (0) or Accurate (100) variant or something in between
        ///Space to default value (42).
        /// </summary>
        internal static string FastAccurate {
            get {
                return ResourceManager.GetString("FastAccurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Win+D and click desktop to minimize window
        ///
        ///before Upscale:
        ///Drag to move window
        ///RMB x2 to fit window in screen.
        /// </summary>
        internal static string FormMoveInfo {
            get {
                return ResourceManager.GetString("FormMoveInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Smooth, clear, a little contrasty and the grid structure is visible, but accurate even without reverse correction
        ///
        ///Fast, and you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string GPTsolution {
            get {
                return ResourceManager.GetString("GPTsolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GPU Acceleration.
        /// </summary>
        internal static string GPUacceleration {
            get {
                return ResourceManager.GetString("GPUacceleration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Processing only 1 channel: Luma
        ///calculated as Y=0.299*R+0.587*G+0.114*B.
        /// </summary>
        internal static string Gray {
            get {
                return ResourceManager.GetString("Gray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gray.
        /// </summary>
        internal static string GrayImage {
            get {
                return ResourceManager.GetString("GrayImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Image buffer
        ///Shows input and output image
        ///Allows you to do several operations before saving total result.
        /// </summary>
        internal static string ImageBuffer {
            get {
                return ResourceManager.GetString("ImageBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mimimal resoulution of Image is 2x2.
        /// </summary>
        internal static string ImageMinRes {
            get {
                return ResourceManager.GetString("ImageMinRes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load raster image from file.
        /// </summary>
        internal static string Load {
            get {
                return ResourceManager.GetString("Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load          .
        /// </summary>
        internal static string LoadButton {
            get {
                return ResourceManager.GetString("LoadButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select method for upscaling.
        /// </summary>
        internal static string Method {
            get {
                return ResourceManager.GetString("Method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Better video card required! (More VRAM required for this size and/or accuracy).
        /// </summary>
        internal static string MoreVRAM {
            get {
                return ResourceManager.GetString("MoreVRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next method for upscaling.
        /// </summary>
        internal static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на sound notification.
        /// </summary>
        internal static string Notification {
            get {
                return ResourceManager.GetString("Notification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Previous method for upscaling.
        /// </summary>
        internal static string Previous {
            get {
                return ResourceManager.GetString("Previous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Raster images.
        /// </summary>
        internal static string RasterImages {
            get {
                return ResourceManager.GetString("RasterImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resolution of image buffer.
        /// </summary>
        internal static string Resolution {
            get {
                return ResourceManager.GetString("Resolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Discard changes and reload image.
        /// </summary>
        internal static string Restore {
            get {
                return ResourceManager.GetString("Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restore.
        /// </summary>
        internal static string RestoreButton {
            get {
                return ResourceManager.GetString("RestoreButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Processing 3 channels: Red,Green,Blue.
        /// </summary>
        internal static string RGB {
            get {
                return ResourceManager.GetString("RGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save result as PNG file.
        /// </summary>
        internal static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        internal static string SaveButton {
            get {
                return ResourceManager.GetString("SaveButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scale:            x.
        /// </summary>
        internal static string Scale {
            get {
                return ResourceManager.GetString("Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Vaguely, but not blurry, may need back adjustment
        ///
        ///Very very slow and you can&apos;t process multiple images at once.
        /// </summary>
        internal static string scale255BA {
            get {
                return ResourceManager.GetString("scale255BA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Defined grid structure, little contrasty and may be present Gibbs ringing artifacts
        ///
        ///Very very fast - Very slow, and you can&apos;t process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleBAContrast {
            get {
                return ResourceManager.GetString("scaleBAContrast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sharpen edges, but contrasty (for accuracy required reverse adjustment) and many Gibbs ringing artifacts
        ///
        ///Very very fast - Very slow, and you can&apos;t process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleBAExtremum {
            get {
                return ResourceManager.GetString("scaleBAExtremum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Smooth, curve and same time sharpness result, but monochrome (colors may be distorted)
        ///
        ///Very slow, and you can&apos;t process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleBAmonochrome {
            get {
                return ResourceManager.GetString("scaleBAmonochrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sharpness edges, but colors may be distorted
        ///
        ///Very slow, and you can&apos;t process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleBAmonochrome2 {
            get {
                return ResourceManager.GetString("scaleBAmonochrome2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сontrasty and may be present grid structure
        ///
        ///Very very fast - Very slow, and you can&apos;t process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleBASmoothContrast {
            get {
                return ResourceManager.GetString("scaleBASmoothContrast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A clearly defined grid structure and may be present Gibbs ringing artifacts, but it&apos;s better than nearest neighbour
        ///
        ///Very very fast - Very slow, and you can&apos;t process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleBilinearApproximation {
            get {
                return ResourceManager.GetString("scaleBilinearApproximation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Much Gibb&apos;s ring afrtifacts in the grid structure, contrasty but sharp edges
        ///
        ///Very fast - Very slow and you can&apos;t process multiple images at once.
        /// </summary>
        internal static string scaleDerivativeBA {
            get {
                return ResourceManager.GetString("scaleDerivativeBA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Write or select required scale factor by two axes (2x-128x).
        /// </summary>
        internal static string ScaleFactor {
            get {
                return ResourceManager.GetString("ScaleFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Beautiful and detailed result, but only if bigger version must be monochrome image (only pure black and white, or for color - only pure red, black, green, yellow, fuchsia, blue, cyan and white)
        ///
        ///Very slow - Very very slow, but you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleFurry {
            get {
                return ResourceManager.GetString("scaleFurry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Typographic raster stylization, but if bigger version must be monochrome image it gives acceptable upscaling
        ///
        ///Very slow, but you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleRough {
            get {
                return ResourceManager.GetString("scaleRough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gives beatiful, but almost monochrome result and there are Gibbs ringing artifacts (to avoid you can try several times x2-x4)
        ///
        ///Very very fast - fast, but you can&apos;t process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleSeparate {
            get {
                return ResourceManager.GetString("scaleSeparate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Most accurate for scenes where objects are completely in the image, but little bit blurred (much less than any interpolation) and grid structure is still visible
        ///
        ///Very fast - Slow, and you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string ScaleSmooth {
            get {
                return ResourceManager.GetString("ScaleSmooth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Most accurate for scenes where objects extend beyond the boundaries of the image, but little bit blurred (much less than any interpolation) and grid structure is still visible
        ///
        ///Very fast - Slow, and you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string scaleSmoothContinuous {
            get {
                return ResourceManager.GetString("scaleSmoothContinuous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Very smooth, after reverse adjustment - most accurate for any scenes, but very contrast and grid structure is still visible
        ///
        ///Slow, but you can process multiple images at the same time without losing speed.
        /// </summary>
        internal static string ScaleSmoothContrast {
            get {
                return ResourceManager.GetString("ScaleSmoothContrast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Makes objects thinner and more colorful
        ///
        ///Very slow and you can&apos;t process multiple images at once.
        /// </summary>
        internal static string scaleThin255BA {
            get {
                return ResourceManager.GetString("scaleThin255BA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на seconds spent.
        /// </summary>
        internal static string SecSpent {
            get {
                return ResourceManager.GetString("SecSpent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Notify that processing is done by loud sound.
        /// </summary>
        internal static string SoundNotification {
            get {
                return ResourceManager.GetString("SoundNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start processing with selected parameters
        ///Be careful - the process can be very long and it will be impossible to cancel it except with the close button or through the task manager.
        /// </summary>
        internal static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upscale.
        /// </summary>
        internal static string Upscale {
            get {
                return ResourceManager.GetString("Upscale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Try increase perfomance by using your videocard? 
        ///(It may interrupt other non-system GPU processes or actually decrease perfomance, results of CPU and GPU versions may differ slightly, GPU version may sometimes crashes)
        ///
        ///Square - Auto decide
        ///Check mark - Always
        ///Empty - Never.
        /// </summary>
        internal static string UseGPU {
            get {
                return ResourceManager.GetString("UseGPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculating...                         %.
        /// </summary>
        internal static string Wait {
            get {
                return ResourceManager.GetString("Wait", resourceCulture);
            }
        }
    }
}
